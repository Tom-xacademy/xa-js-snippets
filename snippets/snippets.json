{
    "ClassComponent": {
        "prefix": "_cc",
        "body": [
            "import React from \"react\";",
            "",
            "class ${0} extends React.Component {",
            "    state = {",
            "        loading: true,",
            "        error: null,",
            "    };",
            "",
            "    componentDidMount() {",
            "        init();",
            "    }",
            "",
            "    init = () => {",
            "        ",
            "    }",
            "",
            "    render() {",
            "        return (",
            "           <${0}View {...this.state} />",
            "        );",
            "    }",
            "}",
            "",
            "export default ${0};"
        ],
        "description": "Generates an empty react class with loading and error state."
    },
    "ViewComponent": {
        "prefix": "_vc",
        "body": [
            "import React from \"react\";",
            "",
            "export const ${1} = (props) => {",
            "    return (",
            "       <div className=\"${2}-view\">",
            "       </div>",
            "    );",
            "}"
        ],
        "description": "Generates an empty react view function."
    },
    "ClassFunction": {
        "prefix": "_cfoo",
        "body": ["${1} = () => {", "    ${2}", "}"],
        "description": "Generates an empty class arrow function."
    },
    "Function": {
        "prefix": "_foo",
        "body": ["const ${1} = (${2}) => {", "    ${3}", "}"],
        "description": "Generates an empty arrow function."
    },
    "ImportReact": {
        "prefix": "_imr",
        "body": ["import React from \"react\""],
        "description": "Imports react."
    },
    "StateCloneToProps": {
        "prefix": "_sttp",
        "body": ["{...this.state}"],
        "description": "Clones the state to props."
    },
    "PropCloneToProps": {
        "prefix": "_ptp",
        "body": ["{...this.props}"],
        "description": "Clones the props to props."
    },
    "GenerateModel": {
        "prefix": "_mo",
        "body": [
            "export class ${1}Model {",
            "    constructor(data) {",
            "        if (!data) return;",
            "",
            "        for (let key in this) {",
            "            if (key in data) {",
            "                this[key] = `${data[key]}`;",
            "            }",
            "        }",
            "",
            "    }",
            "",
            "    ${2}= \"\"; // string",
            "}"
        ],
        "description": "Generates a model instance."
    }
}
